#!groovy

def job = organizationFolder('example') {
    steps {
        openshift.withCluster() {
            def secret = openshift.selector( "secret/githuboauth" ).object()
            println(secret.data)
        }
    }
    description('This contains branch source jobs for Bitbucket and GitHub')
    displayName('Organization Folder')
  	orphanedItemStrategy {
        discardOldItems {
		    daysToKeep(0)
		    numToKeep(0)
        }
	}
	organizations {
		github {
            apiUri('https://api.github.com')
			repoOwner('jcpowermac')
			scanCredentialsId('github')
			pattern('playbook2image')
			checkoutCredentialsId('github')
			buildOriginBranch(true)
			buildOriginBranchWithPR(true)
			buildOriginPRMerge(false)
			buildOriginPRHead(false)
			buildForkPRMerge(true)
			buildForkPRHead(false)
		}
    }
    triggers {
        periodic(10)
    }
}

queue(job)
